{
    "swagger": "2.0",
    "info": {
        "description": "API для работы с DC Analytics Service.",
        "title": "DC Analytics Service API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {},
        "version": "1.0"
    },
    "paths": {
        "/login": {
            "post": {
                "description": "Принимает логин и пароль, возвращает JWT-токен при успехе",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "LoginHandler",
                "parameters": [
                    {
                        "description": "Логин и пароль",
                        "name": "loginData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Возвращает поле token и message",
                        "schema": {
                            "$ref": "#/definitions/handler.AuthResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный формат запроса",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Неверные учетные данные",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка генерации токена",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/analytics/devices": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Возвращает список устройств и общее количество устройств (size). Используйте параметры page и limit.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "devices"
                ],
                "summary": "GetDevices",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Номер страницы",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Количество элементов на страницу",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.PaginatedDevices"
                        }
                    },
                    "400": {
                        "description": "Неверный формат параметров",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/analytics/devices/stats": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Возвращает общее количество устройств, количество устройств с платформой android, ios, Pixel и устройств с smart_call_hiya == 1",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "devices"
                ],
                "summary": "GetDeviceStats",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DeviceStatsResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/analytics/devices/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Ищет устройство в базе данных и возвращает, если найдено",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "devices"
                ],
                "summary": "GetDeviceByID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID устройства",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Device"
                        }
                    },
                    "400": {
                        "description": "Неверный формат ID",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Устройство не найдено",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Удаляет устройство, если оно существует",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "devices"
                ],
                "summary": "DeleteDevice",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID устройства",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Устройство удалено",
                        "schema": {
                            "$ref": "#/definitions/models.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный формат ID",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Устройство не найдено",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Обновляет поля устройства, переданные в теле запроса (PATCH)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "devices"
                ],
                "summary": "UpdateDevice",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID устройства",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные для обновления",
                        "name": "device",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.UpdateDeviceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Device"
                        }
                    },
                    "400": {
                        "description": "Неверный формат ID или некорректные данные обновления",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/analytics/devices/{id}/call-stats": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Возвращает статистику звонков для указанного устройства. Если параметр date не указан, агрегируются данные по всем датам; если указан, то только для указанной даты.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "devices"
                ],
                "summary": "GetCallStats",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID устройства",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Дата для фильтрации (формат YYYY-MM-DD)",
                        "name": "date",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Агрегированная статистика звонков устройства",
                        "schema": {
                            "$ref": "#/definitions/models.DeviceCallStatsResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный формат запроса",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/analytics/devices/{id}/screenshots": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Возвращает последние скриншоты устройства с пагинацией.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "devices"
                ],
                "summary": "GetDeviceScreenshots",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID устройства",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Номер страницы",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Количество элементов на странице",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.DeviceScreenshot"
                            }
                        }
                    },
                    "400": {
                        "description": "Неверный формат параметров",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/analytics/ping": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Возвращает \"pong\" если сервер работает",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "ping"
                ],
                "summary": "PingHandler",
                "responses": {
                    "200": {
                        "description": "pong",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/analytics/servers": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Возвращает список всех серверов",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "servers"
                ],
                "summary": "GetServers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Server"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/analytics/servers/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Возвращает сервер по заданному ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "servers"
                ],
                "summary": "GetServerByID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID сервера",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Server"
                        }
                    },
                    "400": {
                        "description": "Неверный формат ID",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Обновляет запись сервера с заданным ID. Передается JSON с полями для обновления.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "servers"
                ],
                "summary": "UpdateServer",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID сервера",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные для обновления сервера",
                        "name": "server",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateServerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Server"
                        }
                    },
                    "400": {
                        "description": "Неверный формат запроса или ID",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Сервер не найден",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/analytics/servers/{id}/devices": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Возвращает список устройств для сервера с указанным ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "servers"
                ],
                "summary": "GetDevicesByServerID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID сервера",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Device"
                            }
                        }
                    },
                    "400": {
                        "description": "Неверный формат ID",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/analytics/tasks/stats": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Возвращает статистику звонков, сгруппированную по датам.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "GetTaskStats",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Дата для фильтрации (YYYY-MM-DD). Если не указан, возвращаются данные по всем датам.",
                        "name": "date",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Массив статистических данных",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.TaskStat"
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/analytics/users": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Возвращает массив пользователей",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "GetUsers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.User"
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Принимает данные и создает пользователя в системе",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "CreateUser",
                "parameters": [
                    {
                        "description": "Данные пользователя",
                        "name": "userData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Неверные данные для создания пользователя",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/analytics/users/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Возвращает данные пользователя, если он существует",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "GetUserByID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID пользователя",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Неверный формат ID",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Пользователь не найден",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Удаляет пользователя по его ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "DeleteUser",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID пользователя",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Пользователь удален",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Неверный формат ID",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Пользователь не найден",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handler.AuthResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Успешная авторизация"
                },
                "token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUz..."
                }
            }
        },
        "handler.LoginRequest": {
            "type": "object",
            "required": [
                "login",
                "password"
            ],
            "properties": {
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "models.Device": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "integer"
                },
                "baseband_version": {
                    "type": "string"
                },
                "build_number": {
                    "type": "string"
                },
                "carrier": {
                    "type": "string"
                },
                "cloud": {
                    "type": "integer"
                },
                "config": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "hub": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "imei": {
                    "type": "string"
                },
                "model": {
                    "type": "string"
                },
                "model_image_url": {
                    "type": "string"
                },
                "number": {
                    "type": "string"
                },
                "os_version": {
                    "type": "string"
                },
                "platform": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "priority": {
                    "type": "string"
                },
                "serial": {
                    "type": "string"
                },
                "server": {
                    "type": "string"
                },
                "smart_call_hiya": {
                    "type": "integer"
                },
                "sp_software_version": {
                    "type": "string"
                },
                "ui_version": {
                    "type": "number"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.DeviceCallStatsResponse": {
            "type": "object",
            "properties": {
                "calls_by_day": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TaskStat"
                    }
                },
                "status_counts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.StatusCount"
                    }
                },
                "today_calls": {
                    "type": "integer"
                }
            }
        },
        "models.DeviceScreenshot": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "screenshot": {
                    "type": "string"
                }
            }
        },
        "models.DeviceStatsResponse": {
            "type": "object",
            "properties": {
                "android_count": {
                    "type": "integer"
                },
                "ios_count": {
                    "type": "integer"
                },
                "pixel_count": {
                    "type": "integer"
                },
                "smart_call_hiya_count": {
                    "type": "integer"
                },
                "total_count": {
                    "type": "integer"
                }
            }
        },
        "models.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "error"
                }
            }
        },
        "models.MessageResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "message"
                }
            }
        },
        "models.PaginatedDevices": {
            "type": "object",
            "properties": {
                "devices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Device"
                    }
                },
                "total_pages": {
                    "type": "integer"
                }
            }
        },
        "models.Server": {
            "type": "object",
            "properties": {
                "cloud_device_type": {
                    "type": "string"
                },
                "cloud_name": {
                    "type": "string"
                },
                "cloud_state": {
                    "type": "string"
                },
                "cloud_status": {
                    "type": "string"
                },
                "cloud_type": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "ip": {
                    "type": "string"
                },
                "server_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.StatusCount": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "models.TaskStat": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "created_at_str": {
                    "type": "string"
                }
            }
        },
        "models.UpdateServerRequest": {
            "type": "object",
            "properties": {
                "cloud_name": {
                    "type": "string"
                },
                "cloud_state": {
                    "type": "string"
                },
                "cloud_status": {
                    "type": "string"
                },
                "cloud_type": {
                    "type": "string"
                },
                "ip": {
                    "type": "string"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                },
                "last_login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "verified_at": {
                    "type": "string"
                }
            }
        },
        "service.CreateUserRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "password": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "service.UpdateDeviceRequest": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "integer"
                },
                "baseband_version": {
                    "type": "string"
                },
                "build_number": {
                    "type": "string"
                },
                "carrier": {
                    "type": "string"
                },
                "cloud": {
                    "type": "integer"
                },
                "config": {
                    "type": "integer"
                },
                "hub": {
                    "type": "string"
                },
                "imei": {
                    "type": "string"
                },
                "model": {
                    "type": "string"
                },
                "number": {
                    "type": "string"
                },
                "os_version": {
                    "type": "string"
                },
                "platform": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "priority": {
                    "type": "string"
                },
                "serial": {
                    "type": "string"
                },
                "server": {
                    "type": "string"
                },
                "smart_call_hiya": {
                    "type": "integer"
                },
                "sp_software_version": {
                    "type": "string"
                },
                "ui_version": {
                    "type": "number"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Введите JWT-токен в формате: \"Bearer \u003cваш_токен\u003e\"",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}