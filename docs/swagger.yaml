definitions:
  handler.LoginRequest:
    properties:
      login:
        type: string
      password:
        type: string
    required:
    - login
    - password
    type: object
  models.Device:
    properties:
      active:
        type: integer
      baseband_version:
        type: string
      build_number:
        type: string
      carrier:
        type: string
      cloud:
        type: integer
      config:
        type: integer
      created_at:
        type: string
      deleted_at:
        type: string
      hub:
        type: string
      id:
        type: integer
      imei:
        type: string
      model:
        type: string
      model_image_url:
        type: string
      number:
        type: string
      os_version:
        type: string
      platform:
        type: string
      port:
        type: integer
      priority:
        type: string
      serial:
        type: string
      server:
        type: string
      smart_call_hiya:
        type: integer
      sp_software_version:
        type: string
      ui_version:
        type: number
      updated_at:
        type: string
    type: object
  models.DeviceCallStatsResponse:
    properties:
      calls_by_day:
        items:
          $ref: '#/definitions/models.TaskStat'
        type: array
      status_counts:
        items:
          $ref: '#/definitions/models.StatusCount'
        type: array
      today_calls:
        type: integer
    type: object
  models.DeviceScreenshot:
    properties:
      created_at:
        type: string
      screenshot:
        type: string
    type: object
  models.DeviceStatsResponse:
    properties:
      android_count:
        type: integer
      ios_count:
        type: integer
      pixel_count:
        type: integer
      smart_call_hiya_count:
        type: integer
      total_count:
        type: integer
    type: object
  models.PaginatedDevices:
    properties:
      devices:
        items:
          $ref: '#/definitions/models.Device'
        type: array
      total_pages:
        type: integer
    type: object
  models.StatusCount:
    properties:
      count:
        type: integer
      status:
        type: string
    type: object
  models.TaskStat:
    properties:
      count:
        type: integer
      created_at_str:
        type: string
    type: object
  models.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      last_login:
        type: string
      password:
        type: string
      role:
        type: string
      updated_at:
        type: string
      username:
        type: string
      verified_at:
        type: string
    type: object
  service.CreateUserRequest:
    properties:
      email:
        type: string
      is_active:
        type: boolean
      password:
        type: string
      role:
        type: string
      username:
        type: string
    type: object
  service.UpdateDeviceRequest:
    properties:
      active:
        type: integer
      baseband_version:
        type: string
      build_number:
        type: string
      carrier:
        type: string
      cloud:
        type: integer
      config:
        type: integer
      hub:
        type: string
      imei:
        type: string
      model:
        type: string
      number:
        type: string
      os_version:
        type: string
      platform:
        type: string
      port:
        type: integer
      priority:
        type: string
      serial:
        type: string
      server:
        type: string
      smart_call_hiya:
        type: integer
      sp_software_version:
        type: string
      ui_version:
        type: number
    type: object
info:
  contact: {}
  description: API для работы с DC Analytics Service.
  termsOfService: http://swagger.io/terms/
  title: DC Analytics Service API
  version: "1.0"
paths:
  /devices/{id}/screenshots:
    get:
      consumes:
      - application/json
      description: Возвращает последние скриншоты устройства с пагинацией.
      parameters:
      - description: ID устройства
        in: path
        name: id
        required: true
        type: integer
      - default: 1
        description: Номер страницы
        in: query
        name: page
        type: integer
      - default: 10
        description: Количество элементов на странице
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.DeviceScreenshot'
            type: array
        "400":
          description: Неверный формат параметров
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: GetDeviceScreenshots
      tags:
      - devices
  /login:
    post:
      consumes:
      - application/json
      description: Принимает логин и пароль, возвращает JWT-токен при успехе
      parameters:
      - description: Логин и пароль
        in: body
        name: loginData
        required: true
        schema:
          $ref: '#/definitions/handler.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Возвращает поле token и message
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Неверный формат запроса
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Неверные учетные данные
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Ошибка генерации токена
          schema:
            additionalProperties:
              type: string
            type: object
      summary: LoginHandler
      tags:
      - auth
  /ping:
    get:
      description: Возвращает "pong" если сервер работает
      produces:
      - text/plain
      responses:
        "200":
          description: pong
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - BearerAuth: []
      summary: PingHandler
      tags:
      - ping
  /v1/analytics/devices:
    get:
      consumes:
      - application/json
      description: Возвращает список устройств и общее количество устройств (size).
        Используйте параметры page и limit.
      parameters:
      - default: 1
        description: Номер страницы
        in: query
        name: page
        type: integer
      - default: 10
        description: Количество элементов на страницу
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.PaginatedDevices'
        "400":
          description: Неверный формат параметров
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: GetDevices
      tags:
      - devices
  /v1/analytics/devices/{id}:
    delete:
      consumes:
      - application/json
      description: Удаляет устройство, если оно существует
      parameters:
      - description: ID устройства
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Устройство удалено
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Неверный формат ID
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Устройство не найдено
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: DeleteDevice
      tags:
      - devices
    get:
      consumes:
      - application/json
      description: Ищет устройство в базе данных и возвращает, если найдено
      parameters:
      - description: ID устройства
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Device'
        "400":
          description: Неверный формат ID
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Устройство не найдено
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: GetDeviceByID
      tags:
      - devices
    patch:
      consumes:
      - application/json
      description: Обновляет поля устройства, переданные в теле запроса (PATCH)
      parameters:
      - description: ID устройства
        in: path
        name: id
        required: true
        type: integer
      - description: Данные для обновления
        in: body
        name: device
        required: true
        schema:
          $ref: '#/definitions/service.UpdateDeviceRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Device'
        "400":
          description: Неверный формат ID или некорректные данные обновления
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: UpdateDevice
      tags:
      - devices
  /v1/analytics/devices/{id}/call-stats:
    get:
      consumes:
      - application/json
      description: 'Возвращает статистику звонков для указанного устройства. Ответ
        включает:'
      parameters:
      - description: ID устройства
        in: path
        name: id
        required: true
        type: integer
      - description: Дата для фильтрации (формат YYYY-MM-DD)
        in: query
        name: date
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Агрегированная статистика звонков устройства
          schema:
            $ref: '#/definitions/models.DeviceCallStatsResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: GetCallStats
      tags:
      - devices
  /v1/analytics/devices/stats:
    get:
      consumes:
      - application/json
      description: Возвращает общее количество устройств, количество устройств с платформой
        android, ios, Pixel и устройств с smart_call_hiya == 1
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.DeviceStatsResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: GetDeviceStats
      tags:
      - devices
  /v1/analytics/tasks/stats:
    get:
      consumes:
      - application/json
      description: Возвращает статистику звонков, сгруппированную по датам.
      parameters:
      - description: Дата для фильтрации (YYYY-MM-DD). Если не указан, возвращаются
          данные по всем датам.
        in: query
        name: date
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Массив агрегированных статистических данных
          schema:
            items:
              $ref: '#/definitions/models.TaskStat'
            type: array
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: GetTaskStats
      tags:
      - tasks
  /v1/analytics/users:
    get:
      consumes:
      - application/json
      description: Возвращает массив пользователей
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: GetUsers
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Принимает данные и создает пользователя в системе
      parameters:
      - description: Данные пользователя
        in: body
        name: userData
        required: true
        schema:
          $ref: '#/definitions/service.CreateUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Неверные данные для создания пользователя
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: CreateUser
      tags:
      - users
  /v1/analytics/users/{id}:
    delete:
      consumes:
      - application/json
      description: Удаляет пользователя по его ID
      parameters:
      - description: ID пользователя
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Пользователь удален
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Неверный формат ID
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Пользователь не найден
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: DeleteUser
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Возвращает данные пользователя, если он существует
      parameters:
      - description: ID пользователя
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Неверный формат ID
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Пользователь не найден
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: GetUserByID
      tags:
      - users
securityDefinitions:
  BearerAuth:
    description: 'Введите JWT-токен в формате: "Bearer <ваш_токен>"'
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
